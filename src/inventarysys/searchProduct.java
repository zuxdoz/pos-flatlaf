/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package inventarysys;


import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.DefaultListModel;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import javax.swing.SwingUtilities;

/**
 *
 * @author circo
 */

public class searchProduct extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(searchProduct.class.getName());
    
    productInfo product = new productInfo();
    DefaultListModel<String> model = new DefaultListModel<>();
    Connection dataBaseConn = connectDB();
    List<productInfo> productList = new ArrayList<>();
    
    /**
     * Creates new form searchProduct
     */
    
    private mainForm parentForm;
    
    public searchProduct(mainForm parentForm) {
        this.parentForm = parentForm;
        initComponents();
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jList1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList1KeyPressed(evt);
            }
        });
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE)
                    .addComponent(jTextField1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        SwingUtilities.invokeLater(()->{
            String  word = jTextField1.getText().trim();
            searchProducts(word,dataBaseConn);
        });
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        String item = "";
        if(!evt.getValueIsAdjusting()){
            item = jList1.getSelectedValue();
            int index = jList1.getSelectedIndex();
            if(item != null && !item.isEmpty()){
                //Seleccionas el producto de la lista
                setProduct(productList.get(index));
            }
        }
        
    }//GEN-LAST:event_jList1ValueChanged

    private void jList1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyPressed
        if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER){
        String selectedValue = jList1.getSelectedValue(); // O tu objeto

        if (selectedValue != null && parentForm != null) {
            parentForm.setProductInfo(product); // Método que tú defines en mainForm
        }
        closeDB(dataBaseConn);
        this.dispose(); // Cierra esta ventana
    }
    }//GEN-LAST:event_jList1KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        

        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        
        /* Create and display the form */
        mainForm dummyParent = new mainForm(null);
        java.awt.EventQueue.invokeLater(() -> new searchProduct(dummyParent).setVisible(true));
    }
   
    private Connection connectDB() {
    String url = "jdbc:sqlite:inventary.db";
    Connection conn = null;
    
    try {
        conn = DriverManager.getConnection(url);
        if (conn != null) {
            DatabaseMetaData meta = conn.getMetaData();
            System.out.println("El driver es: " + meta.getDriverName());
            System.out.println("Conexión y configuración establecida correctamente");
        }
    } catch (SQLException e) {
        System.out.println("Error en la conexión: " + e.getMessage());
    }
    
    return conn;
}

private void setProduct(productInfo product){
    this.product = product;
}
private void searchProducts(String nameProduct, Connection conn) {
    model.clear();
    String search = "SELECT * FROM Products WHERE description LIKE ? OR brand LIKE ?";
    int i = 0;
    productInfo currentProduct = new productInfo();
    try (PreparedStatement pstmt = conn.prepareStatement(search)) {
        pstmt.setString(1, "%" + nameProduct + "%");
        pstmt.setString(2,"%" + nameProduct + "%");
        
        try (ResultSet rs = pstmt.executeQuery()) {
            while (rs.next()) {
                // Leer datos del producto
                int id = rs.getInt("id"); // ejemplo
                String description = rs.getString("description");
                int quantity = rs.getInt("quantity");
                String brand = rs.getString("brand");
                String type = rs.getString("type");
                float sellPrice = rs.getFloat("sellPrice");
                float buyPrice = rs.getFloat("buyPrice");
                
                if (quantity>0){
                String item = String.format("%s | %s - %s | %d unidades | $%.2f",id, brand, description, quantity, sellPrice);
                model.addElement(item);
                
                //Setter for individual items
                currentProduct.setCode(id);
                currentProduct.setDescription(description);
                currentProduct.setSellPrice(sellPrice);
                currentProduct.setBuyPrice(buyPrice);
                currentProduct.setBrand(brand);
                currentProduct.setQuantity(quantity);
                currentProduct.setType(type);
                productList.add(i,currentProduct);
                i++;
                }
                
                
            }
            jList1.setModel(model);
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }
}

    private void closeDB(Connection conn){
        try {
            conn.close();
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}

